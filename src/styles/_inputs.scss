.tag{

	&.disabled{
		position: relative;
		&:before{
			position: absolute;
			content: '';
			width: 100%;
			height: 100%;
			background-color: transparent;
		}

		.tag_wrapper, .tag_input{
			background-color: #e9ecef;
		}
	}
	.tag_wrapper{
		height:auto;

		&.focus{
			color: $input-focus-color;
		    background-color: $input-focus-bg;
		    border-color: $input-focus-border-color;
		    outline: 0;
		    @if $enable-shadows {
		      box-shadow: $input-box-shadow, $input-focus-box-shadow;
		    } @else {
		      box-shadow: $input-focus-box-shadow;
		    }
		}
	}

	.tag_item_close{
		font-size:1rem;
		margin-left: 0.25rem;
		vertical-align: middle;
		cursor: pointer;
	}

	.tag_item{
		margin-right: 0.3rem;
	}

	.tag_input{
		border: none;
		margin-top: 0.2rem;
		&:focus{
			outline : 0;
			outline-style: none;
		}
	}
}


.ip_control{
	display: flex;
	flex-direction: row;
	width: 100%;
	height: $input-height;
	padding: $input-padding-y $input-padding-x;
	font-size: $font-size-base;
	line-height: $input-line-height;
	color: $input-color;
	background-color: $input-bg;
	background-clip: padding-box;
	border: $input-border-width solid $input-border-color;

	// Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
	@if $enable-rounded {
	  // Manually use the if/else instead of the mixin to account for iOS override
		border-radius: $input-border-radius;
	} @else {
	  // Otherwise undo the iOS default
		border-radius: 0;
	}

	@include box-shadow($input-box-shadow);
	@include transition($input-transition);

	  // Placeholder
	&::placeholder {
		color: $input-placeholder-color;
	    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
		opacity: 1;
	}

	&:focus-within {
		color: $input-focus-color;
		background-color: $input-focus-bg;
		border-color: $input-focus-border-color;
		outline: 0;
	    // Avoid using mixin so we can pass custom focus shadow properly
		@if $enable-shadows {
			box-shadow: $input-box-shadow, $input-focus-box-shadow;
		} @else {
			box-shadow: $input-focus-box-shadow;
		}
	}

	&.disabled, &:disabled{
		position: relative;
		background-color: #e9ecef;
		box-shadow : none;
		border-color: $input-border-color;
		&:before{
			position: absolute;
			content: '';
			width: 100%;
			height: 100%;
			background-color: transparent;
		}

		input{
			background-color: #e9ecef;
		}
	}

	input {
		width: 20%;
		flex: 1 1 auto;
		border : 0;
		outline: 0;
		text-align: center;
	}

}